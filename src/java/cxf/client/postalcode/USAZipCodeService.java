package cxf.client.postalcode;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.6.2
 * 2013-03-09T20:52:41.372-06:00
 * Generated source version: 2.6.2
 * 
 */
@WebServiceClient(name = "USAZipCodeService", 
                  wsdlLocation = "http://www.restfulwebservices.net/wcf/USAZipCodeService.svc?wsdl",
                  targetNamespace = "http://www.restfulwebservices.net/ServiceContracts/2008/01") 
public class USAZipCodeService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://www.restfulwebservices.net/ServiceContracts/2008/01", "USAZipCodeService");
    public final static QName BasicHttpBindingIPostalCodeService = new QName("http://www.restfulwebservices.net/ServiceContracts/2008/01", "BasicHttpBinding_IPostalCodeService");
    static {
        URL url = null;
        try {
            url = new URL("http://www.restfulwebservices.net/wcf/USAZipCodeService.svc?wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(USAZipCodeService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "http://www.restfulwebservices.net/wcf/USAZipCodeService.svc?wsdl");
        }
        WSDL_LOCATION = url;
    }

    public USAZipCodeService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public USAZipCodeService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public USAZipCodeService() {
        super(WSDL_LOCATION, SERVICE);
    }
    

    /**
     *
     * @return
     *     returns IPostalCodeService
     */
    @WebEndpoint(name = "BasicHttpBinding_IPostalCodeService")
    public IPostalCodeService getBasicHttpBindingIPostalCodeService() {
        return super.getPort(BasicHttpBindingIPostalCodeService, IPostalCodeService.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns IPostalCodeService
     */
    @WebEndpoint(name = "BasicHttpBinding_IPostalCodeService")
    public IPostalCodeService getBasicHttpBindingIPostalCodeService(WebServiceFeature... features) {
        return super.getPort(BasicHttpBindingIPostalCodeService, IPostalCodeService.class, features);
    }

}
